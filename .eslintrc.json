{
    "root": true,
    "ignorePatterns": ["projects/**/*"],
    "overrides": [
        {
            "files": ["*.ts"],
            "parserOptions": {
                "project": ["tsconfig.json", "e2e/tsconfig.json"],
                "createDefaultProgram": true
            },
            "extends": [
                "plugin:@angular-eslint/recommended", // https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/src/configs/recommended.json
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "plugins": [
                "deprecation"
            ],
            "rules": {
                // Typescript
                "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
                "@typescript-eslint/dot-notation": "off",
                "@typescript-eslint/explicit-member-accessibility": [
                    "off",
                    {
                        "accessibility": "explicit"
                    }
                ],
                "@typescript-eslint/member-ordering": [
                    "error",
                    {
                        "default": [
                            // Index signature
                            "signature",

                            // Fields
                            "public-decorated-field",
                            "private-field",
                            "protected-field",
                            "public-field",
                            "field",

                            // Constructor
                            "constructor",

                            // Methods
                            "public-method",
                            "public-decorated-method",
                            "protected-method",
                            "private-method",
                            "method"
                        ]
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "warn",
                    {
                        "selector": "classProperty",
                        "leadingUnderscore": "allow",
                        "trailingUnderscore": "forbid",
                        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
                    }
                ],
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/no-use-before-define": "error",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-non-null-assertion": "error",
                "@typescript-eslint/no-unused-expressions": [
                    "error",
                    {
                        "allowTernary": true
                    }
                ],
                "@typescript-eslint/type-annotation-spacing": "warn",
                "@typescript-eslint/quotes": ["error", "single", { "avoidEscape": true }],
                "@typescript-eslint/unified-signatures": "error",

                // Angular
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": "app",
                        "style": "kebab-case"
                    }
                ],
                "@angular-eslint/contextual-decorator": "error",
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": "app",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/no-attribute-decorator": "error",
                "@angular-eslint/no-conflicting-lifecycle": "error",
                "@angular-eslint/no-empty-lifecycle-method": "warn",
                "@angular-eslint/no-forward-ref": "error",
                "@angular-eslint/no-input-prefix": "error",
                "@angular-eslint/no-pipe-impure": "error",
                "@angular-eslint/no-queries-metadata-property": "error",
                "@angular-eslint/prefer-output-readonly": "error",
                "@angular-eslint/relative-url-prefix": "error",
                "@angular-eslint/sort-ngmodule-metadata-arrays": "warn",
                "@angular-eslint/use-injectable-provided-in": "error",
                "@angular-eslint/use-lifecycle-interface": "error",
                "@angular-eslint/use-pipe-transform-interface": "error",

                // Eslint base
                "brace-style": ["error", "1tbs"],
                "curly": "off",
                "deprecation/deprecation": "warn",
                "eqeqeq": ["error", "smart"],
                "guard-for-in": "off",
                "id-blacklist": "off",
                "id-match": "off",
                "jsdoc/no-types": "off",
                "max-len": "off",
                "no-trailing-spaces": "off",
                "no-underscore-dangle": "off",
                "no-restricted-imports": ["error", "rxjs/Rx"],
                "no-eval": "error",
                "no-console": "off",
                "prefer-const": "off",
                "quotes": "off",
                "radix": "off"
            }
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:@angular-eslint/template/recommended"],
            "rules": {
                "@angular-eslint/template/eqeqeq": "off"
            }
        },
        {
            "files": ["*.cy.ts"],
            "extends": [
                "plugin:@angular-eslint/recommended"
            ],
            "rules": {
                "@typescript-eslint/no-unused-expressions": "off"
            }
        }
    ]
}
